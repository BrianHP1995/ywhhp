<template>
    <view id="groupOrderDetail">
            <view class="buy_top_box">
                <view class="pro_details_box pos-r">
                    <view class="pro_tag pos-a">二人团</view>
                    <view class="pro_details">
                        <view class="pro_img_fl">
                            <image src="{{groupGoodsDetail.logo}}" />
                        </view>
                        <view class="pro_txt_fr">
                            <view class="pro_detail_tt">限时专享 | {{groupGoodsDetail.title}}</view>
                            <view class="other_tips">存入冰箱库, 永久有效</view>
                            <view class="price">
                                <text class="new_price">￥{{groupGoodsDetail.goods_list.price_selling}}</text>
                                <text class="mail_tips">不含配送费</text>
                                <text class="old_price">￥{{groupGoodsDetail.goods_list.price_market}}</text>
                            </view>
                        </view>
                    </view>
                </view>
            </view>

            <!-- 拼团人头像 -->
            <view class="groupMember">
            	<view class="title font-s38 font-bold">
            		<p wx:if="{{orderDetail.status == 0}}" class="c-main" style="margin-right: 16rpx;">拼团中</p>
                    <p wx:if="{{orderDetail.status == 2}}" class="c-main" style="margin-right: 16rpx;">拼团失败</p>
                    <p wx:if="{{orderDetail.status == 1}}" class="c-main" style="margin-right: 16rpx;">拼团成功</p>
                    <p wx:if="{{orderDetail.status == 3}}" class="c-main" style="margin-right: 16rpx;">退款中</p>
                    分享给更多的好友组团
            	</view>
            	<view wx:if="{{orderDetail.status == 0}}" class="time c-666 font-s32">还差 <text class="c-main">{{orderDetail.group_number}}人</text> 参团 <p>{{countDownTime}}</p></view>
            	<view class="member_img">
                    <repeat for="{{orderDetail.list}}">
                        <view class="img_wrap">
                            <image src="{{item.avatar}}" mode="widthFix"></image>
                            <view class="grouper t-c center-x">团长</view>
                        </view>
                    </repeat>
                    <repeat for="{{orderDetail.group_number - orderDetail.list.length}}">
                        <view class="img_wrap">
                            <image src="../../common/images/atavar.png" mode="widthFix"></image>
                        </view>
                    </repeat>
                </view>

            </view>

        	<view class="buy_bot_box">
        		<view class="all_buy">
               <view class="all_buy_tt"><image class="display-ib v-middle" src="../../common/images/tips.png" mode="widthFix"/>【全民参与】</view>
               <view class="all_buy_txt">
                 拼团成功后，商品将存入您的冰箱库中，可随时享用。下单需支付<text>配送费</text>哦~
               </view>
             </view>
        		<view class="all_buy">
        			<view class="all_buy_tt">
        				<image class="display-ib v-middle" src="../../common/images/tips.png" mode="widthFix" />【拼团流程】</view>
        			<view class="all_buy_txt">发起拼团, 或参加好友的拼团</view>
        			<view class="all_buy_txt">在活动时间内邀请好友一起拼团</view>
        			<view class="all_buy_txt">若拼团成功, 参团商品将分别存入每名团员的冰箱库中, 可下单享用</view>
        			<view class="all_buy_txt">若活动结束, 拼团未成功时, 预付款将原路返回</view>
        		</view>
        	</view>
        	<view class="add_btn_box">
        		<button bindtap="submitOrder" class="add_address_btn" wx:if="{{pageFrom == 'share'}}">
                    <image src="../../common/images/weixin.png" mode="widthFix" />
                    <text wx:if="{{orderDetail.role == 1 && orderDetail.item_status == 0}}">继续支付￥{{groupTotalPrice}}</text>
                    <text wx:if="{{orderDetail.role == 0 && orderDetail.item_status != 0}}">马上跟团￥{{groupTotalPrice}}</text>
                </button>
                <button open-type="share" class="add_address_btn" wx:if="{{pageFrom == 'detail'}}">邀请好友</button>
        	</view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    export default class GroupOrderDetail extends wepy.page {
        config = {
            navigationBarTitleText: "订单详情",
            usingComponents: {},
            enablePullDownRefresh: false,
        }
        data = {
            groupGoodsDetail: {},
            group_order_no: null,
            groupTotalPrice: null,
            goodsId: null,
            orderDetail: null,
            pageFrom: '',
            countDownInterval: null,
            countDownTime: ""
        }
        MillisecondToDate(time) {  //将剩余时间转化为时分秒
            let that = this;
            if (null != time && "" != time && time>=0) {
                if (time > 60 && time < 3600) {
                    time = "00小时"+that.setTime(parseInt(time/60)) + "分钟" + that.setTime(time%60) + "秒";
                } else if (time >= 3600) {
                    time = that.setTime(parseInt(time/3600)) + "小时" + that.setTime(parseInt(parseInt(time%3600)/60)) + "分钟" + that.setTime(parseInt(time%3600)%60) + "秒";
                } else {
                    time = "00小时00分钟" + that.setTime(time) + "秒";
                }
            }else {
                clearInterval(that.countDownInterval);
                return '已结束'
            }
            return time;
        }
        setTime(val) {  //小于十的做补零操作
            if(val < 10) {
                return "0" + val;
            }else {
                return val;
            }
        }

        checkUserLogin(options) {  //检测登录
            let that = this;
            wepy.Utils.isLogin({
                callbackOk: () => {
                    that.group_order_no = options.order_no;
                    that.goodsId = options.goodsId;
                    that.pageFrom = options.from;
                    that.getGroupGoodsDetail(options.goodsId); //获取商品详情
                    that.getGroupOrderDetail(options.order_no); //获取拼团订单详情
                    that.$apply();
                },
                callbackErr: () => {
                    //未登录
                    wepy.Utils.showModal({
                        content: '你还未登录，登录后可获得完整体验',
                        callback: () => {
                            wepy.navigateTo({url: '../../../pages/oauth?order_no='+that.group_order_no+'&goodsId='+that.goodsId+'&from='+options.from})

                        }
                    })
                }
            })
        }
        async getGroupGoodsDetail(goodsId) {
            let that = this;
            let result = await wepy.Api.getGroupGoodsDetail({goods_id: goodsId})
            if(result.code == 1) {
                that.groupGoodsDetail = result.result;
                that.groupTotalPrice = result.result.goods_list.price_selling;
            }
            that.$apply();
        }
        async getGroupOrderDetail(order_no) {
            let that = this;
            let result = await wepy.Api.getGroupOrderDetail({id: order_no})
            if(result.code == 1) {
                that.orderDetail = result.result;
                /*
                    拼团倒计时入参：
                        2小时-（当前时间-拼团订单创建时间）
                */
                that.countDownInterval = setInterval(() => {
                    var time = parseInt(new Date().getTime()/1000) - result.result.createtime;
                    that.countDownTime = MillisecondToDate(3600*2 - time);
                },1000)
                that.$apply();
            }
        }
        onLoad(options) {
            this.checkUserLogin(options);
        }
        methods = {
            submitOrder() {
                let that = this;
                /*
                    pageFrom: detail-微信支付
                              share -马上跟团
                */
                if(that.pageFrom == 'detail') {
                    wepy.Api.groupOrderPay({group_order_no: that.group_order_no})
                        .then(res => {
                            if(res.code == 1) {
                                //创建订单成功，调取微信支付
                                wx.requestPayment({
                                    timeStamp: res.result.timeStamp,
                                    nonceStr: res.result.nonceStr,
                                    package: res.result.package,
                                    signType: 'MD5',
                                    paySign: res.result.paySign,
                                    success (data) {
                                        if(data.errMsg == 'requestPayment:ok') {
                                            wx.showToast({
                                                title: '支付成功'
                                            })
                                            setTimeout(() => {
                                               wx.navigateTo({
                                                   url: './groupPaySucced?group_order_no='+that.group_order_no+'&goodsId='+that.goodsId+'&role=1'
                                               })
                                            },1000)
                                        }

                                    },
                                    fail (err) {
                                        wx.showToast({
                                            icon: 'none',
                                            title: '支付失败'
                                        })
                                    }
                                })
                            }
                        })
                }else if(that.pageFrom == 'share'){
                    wepy.Api.joinGroupOrder({group_order_no: that.group_order_no})
                        .then(res => {
                            if(res.code ==  1) {
                                wepy.Api.groupOrderPay({group_order_no: res.group_order_no})
                                    .then(res => {
                                        if(res.code == 1) {
                                            //创建订单成功，调取微信支付
                                            wx.requestPayment({
                                                timeStamp: res.result.timeStamp,
                                                nonceStr: res.result.nonceStr,
                                                package: res.result.package,
                                                signType: 'MD5',
                                                paySign: res.result.paySign,
                                                success (data) {
                                                    if(data.errMsg == 'requestPayment:ok') {
                                                        wx.showToast({
                                                            title: '拼团成功！'
                                                        })
                                                        setTimeout(function() {
                                                            // wx.reLaunch({
                                                            //     url: './groupOrderList'
                                                            // })
                                                            wx.navigateTo({
                                                                url: './groupPaySucced?group_order_no='+that.group_order_no+'&goodsId='+that.goodsId+'&role=0'
                                                            })
                                                        }, 1000);
                                                    }

                                                },
                                                fail (err) {
                                                    wx.showToast({
                                                        icon: 'none',
                                                        title: '支付失败'
                                                    })
                                                }
                                            })
                                        }
                                    })

                            }else {
                                wx.showToast({
                                    title: res.msg,
                                    icon: 'none'
                                })
                            }
                        })
                        .catch(err => {
                            wx.showToast({
                                title: err,
                                icon: 'none'
                            })
                        })
                }

            },
            onShareAppMessage(ops) {
                const that = this
                if (ops.from === 'button') {
                    // 来自页面内转发按钮
                }
                return {
                    title: '一起来拼团',
                    path: '/packageA/pages/group/groupOrderDetail?order_no='+that.group_order_no+'&goodsId='+that.goodsId+'&from=share',
                    success: function(res) {
                        // 转发成功
                        console.log("转发成功:" + JSON.stringify(res));
                    },
                    fail: function(res) {
                        // 转发失败
                        console.log("转发失败:" + JSON.stringify(res));
                    }
                }

            }
        }
    }
</script>

<style lang="less">
    .groupMember {
        padding: 10px 15px;
        .time {
            margin-top: 20rpx;
        }
        .member_img {
            margin-top: 24rpx;
            .img_wrap {
                display: inline-block;
                margin-top: 3%;
                border-radius: 100%;
                width: 100rpx;
                height: 100rpx;
                margin-right: 25rpx;
                position: relative;
                overflow: hidden;
                background: #e9e9e9;
                border: 2rpx solid #ccc;
                .grouper {
                    bottom: -2%;
                    width: 100rpx;
                    background-color: #CB4949;
                    color: #fff; font-size: 22rpx;
                    border-radius: 6rpx;
                }
            }

        }
    }
    	.add_btn_box {
    		padding: 20rpx;
    		box-sizing: border-box;
    		border-top: 1px solid #e5e5e5;
    		width: 100%;

    		button {
    			background: #51a938;
    			font-size: 32rpx;
    			color: #fff;
    			padding: 20rpx 0;
    			text-align: center;
    			border-radius: 4px;
    			width: 100%;
    			border: none;
    			box-shadow: none;

    			image {
                    display: inline-block;
    				width: 36rpx;
    				margin-right: 15rpx;
    			}
    		}
    	}

    	.buy_top_box {
    		padding: 15rpx;
    		box-sizing: border-box;
    		background: #eef2f7;

    		.pro_details_box {
    			background: #fff;
    			box-shadow: rgba(0, 0, 0, 0.1) 0 0 5px;
                overflow: hidden;
                .pro_tag {
                    background: #e8a439;
                    color: #fff;
                    left: -52rpx;
                    top: 30rpx;
                    font-size: 26rpx;
                    height: 52rpx;
                    line-height: 52rpx;
                    transform: rotate(-45deg);
                    width: 216rpx;
                    text-align: center;
                }
    			.pro_details {
    				display: flex;
    				flex-wrap: nowrap;
    				align-items: center;
    				padding: 30rpx 25rpx;

    				.pro_img_fl {
    					image {
    						width: 200rpx;
    						height: 200rpx;
    					}
    				}

    				.pro_txt_fr {
    					padding-left: 20rpx;

    					.pro_detail_tt {
    						font-size: 34rpx;
    						font-weight: bolder;
    						color: #000;
    					}

    					.other_tips {
    						font-size: 27rpx;
    						color: #666;
    						line-height: 1.4;
    						margin-top: 10rpx;
    					}

    					.price {
    						display: flex;
    						align-items: center;
    						margin-top: 10rpx;

    						.new_price {
    							font-size: 46rpx;
    							color: #bb4e49;
    							font-weight: bolder;
    						}

    						.mail_tips {
    							font-size: 20rpx;
    							color: #bb4e49;
    							margin: 0 10rpx;
    						}

    						.old_price {
    							font-size: 28rpx;
    							color: #666;
    							text-decoration: line-through;
    							// overflow: hidden;
    						}
    					}
    				}
    			}
    		}
    	}

    	.buy_bot_box {
    		.order_details {
    			padding: 10px 15px;

    			.order_details_tt {
    				font-size: 34rpx;
    				color: #000;
    				font-weight: bolder;
    			}

    			.order_list {
    				margin-top: 15rpx;
    				font-size: 32rpx;
    				color: #333;
    				display: flex;
    				align-items: center;
    				justify-content: space-between;
    				border-bottom: 1px solid #ededed;
    				flex-wrap: nowrap;
    				padding: 20rpx 0;
    			}
    		}

    		.all_buy {
    			padding: 10px 15px;
    			// margin-top: 50rpx;

    			.all_buy_tt {
    				font-size: 32rpx;
    				color: #333;
    				font-weight: bolder;

    				image {
    					width: 36rpx;
    					height: 36rpx;
    				}
    			}

    			.all_buy_txt {
    				margin-top: 20rpx;
    				font-size: 24rpx;
    				color: #666;

    				text {
    					font-weight: bolder;
    					color: #333;
    					margin: 0 10rpx;

    				}
    			}
    		}
    	}

    .aa {
    	position: fixed;
    }
</style>
