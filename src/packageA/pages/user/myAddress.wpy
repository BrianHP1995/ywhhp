<template>
    <view class="add_bg myAddress">
        <view class="no_order" wx:if="{{!addressList.length}}">
            <image src="../../common/images/no_order.png" mode="widthFix"/>
            <view>您暂无收货地址~</view>
        </view>
        <van-panel wx:key="item" wx:for="{{addressList}}"
        title="{{item.province}}{{item.city}}{{item.area}}{{item.address}}"
        desc="{{item.name}} {{item.mobile}}"  data-item="{{item}}" @tap="adrSelect">
            <view class="address_handle center-y">
                <!-- 选择地址 -->
                <!-- <view class="adr_select" @tap="adrSelect" data-item="{{item}}"><image src="../../common/images/select.png" mode="widthFix"></image></view> -->
                <!-- 编辑地址 -->
                <view class="adr_edit font-s30" @tap.stop="adrEdit"  data-item="{{item}}">编辑地址<!-- <image src="../../common/images/edit.png" mode="widthFix"></image> --></view>
                <view class="adr_edit font-s30 del" @tap.stop="adrDel"  data-item="{{item}}">删除地址</view>
            </view>
        </van-panel>
        <view class="add_btn_box">
            <button class="add_address_btn t-c font-s32 c-fff" @tap="addAddress">新增收货地址</button>
        </view>
    </view>
    <van-dialog id="van-dialog" />
</template>
<script>
    import wepy from 'wepy';
    import Dialog from '../../../components/VantWeapp/dialog/dialog';
    export default class Address extends wepy.page {
        config = {
            navigationBarTitleText: '我的地址库',
            usingComponents: {
                'van-panel': '../../../components/VantWeapp/panel/index',
                'van-dialog': '../../../components/VantWeapp/dialog/index',
            }
        };
        data = {
            addressList: [],
            code: null, // 1 代表选择地址
            mainActiveIndex: 0,
            activeId: null,
            pageFrom: ''
        };
        components = {};
        async getAddressList() {
            //获取收获地址
            let result = await wepy.Api.getAddressList({});
            this.addressList = result.result;
            this.$apply();
        }
        onLoad(options) {
            // 获取地址列表
            this.getAddressList();
            if(options.from) {
                //判断是从哪里进入的地址列表页面
                this.pageFrom = options.from;
                this.$apply();
            }
        }
        methods = {
            onClose1() {
                const that = this;
                that.show1 = false;
                that.$apply();
            },
            onClickNav({detail = {}}) {
                const that = this;
                that.mainActiveIndex = detail.index || 0;
                this.$apply();
            },

            onClickItem({detail = {}}) {
                const that = this;
                that.activeId = detail.id;
                that.show1 = false;
                that.show = true;
                this.$apply();
            },
            //选择收货地址
            adrSelect(e) {
                let that = this;
                let adrData = e.currentTarget.dataset.item;
                /*
                   判断： pageFrom-如果来自个人中心，只有查看功能
                     else:
                         获取本地存储from
                            fridge: 来自冰箱页面的选择地址
                            sureOrder: 来自下单页面的选择
                */
                if(that.pageFrom == 'user') {
                    return false;
                }else {
                    wx.getStorage({
                        key: 'from',
                        success(fromRes) {
                            wx.setStorage({
                                key: 'addressInfo',
                                data: adrData,
                                success(res) {
                                    if(fromRes.data.fromName== 'fridge') {
                                        wx.reLaunch({
                                            url: '../../../pages/fridge?from=address'
                                        })
                                    }else if(fromRes.data.fromName == 'sureOrder'){
                                        wx.navigateTo({
                                            url: `../index/sureOrder?from=address`
                                        })
                                    }
                                    
                                },
                                fail() {
                                    wx.showToast({
                                        title: '系统错误',
                                        icon: 'none'
                                    })
                                }
                            })
                        }
                    })
                }
            },
            // 编辑地址
            adrEdit(e) {
                let data = e.currentTarget.dataset.item;
                wepy.navigateTo({
                    url: './editAddress?editInfo='+ JSON.stringify(data)
                });
            },
            adrDel(e) {
                let that = this;
                let id = e.currentTarget.dataset.item.id;
                wepy.Api.delAddress({id})
                    .then(res => {
                        if(res.code == 1) {
                            wx.showToast({
                                title: '删除成功'
                            })
                            setTimeout(() => {
                                that.getAddressList();
                            },1000)
                        }
                    })
                    .catch(err => {
                        wx.showToast({
                            title: err.msg
                        })
                    })

            },
            addAddress() {
                const that = this;
                wepy.navigateTo({
                    url: './editAddress'
                });
            }
        };
    }
</script>
<style lang="less" scoped>
    .myAddress {
        .no_order{
            width: 100%;
            position: fixed;
            height: 100%;
            background: #f8f8f8;
            text-align: center;
            font-size: 30rpx;
            color: #666;
            padding: 100rpx 0 0;
            image{
                width: 280rpx;
                margin: 0 auto;
            }
            view{
                margin: 25rpx;
            }
        }
        padding-bottom: 25%;
        .address_handle {
            right: 22rpx;
            .adr_edit {
                // width: 46rpx;

                // margin-left: 20rpx;
                &.del {
                    margin-top: 20rpx;
                }
            }
            .adr_select {
                width: 58rpx;
            }
        }
        .add_btn_box {
            position: fixed;
            left: 0;
            bottom: 30rpx;
            padding: 20rpx;
            box-sizing: border-box;
            width: 100%;
            button {
                background: #cc4444;
                padding: 10rpx 0;
                border-radius: 8px;
                width: 90%;
                border: none;
                box-shadow: none;
            }
        }

    }
</style>
